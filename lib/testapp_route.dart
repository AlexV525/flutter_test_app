// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// Auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************

import 'package:flutter/widgets.dart';

import 'pages/will_pop_scope_page.dart';
import 'pages/looks_like_sliver_appbar.dart';
import 'pages/textfield_as_fab_page.dart';
import 'pages/custom_page_indicator_page.dart';

RouteResult getRouteResult({String name, Map<String, dynamic> arguments}) {
  switch (name) {
    case "/will-pop-scope-page":
      return RouteResult(
        widget: WillPopScopePage(),
        routeName: "pop拦截测试页",
      );
    case "/looks-like-sliver-appbar-page":
      return RouteResult(
        widget: LooksLikeSliverAppBarPage(),
        routeName: "SliverAppBar测试页",
      );
    case "/text-field-in-floating-action-button-page":
      return RouteResult(
        widget: TextFieldInFloatingActionButtonPage(),
        routeName: "TextField与FAB测试页",
      );
    case "/custom-page-view-indicator-page":
      return RouteResult(
        widget: CustomPageViewIndicatorPage(),
        routeName: "自定义pageview indicator测试页",
      );
    default:
      return RouteResult();
  }
}

class RouteResult {
  /// The Widget return base on route
  final Widget widget;

  /// Whether show this route with status bar.
  final bool showStatusBar;

  /// The route name to track page
  final String routeName;

  /// The type of page route
  final PageRouteType pageRouteType;

  /// The description of route
  final String description;

  const RouteResult(
      {this.widget,
      this.showStatusBar = true,
      this.routeName = '',
      this.pageRouteType,
      this.description = ''});
}

enum PageRouteType { material, cupertino, transparent }

List<String> routeNames = [
  "/will-pop-scope-page",
  "/looks-like-sliver-appbar-page",
  "/text-field-in-floating-action-button-page",
  "/custom-page-view-indicator-page"
];

class Routes {
  /// pop拦截测试页
  ///
  /// [name] : /will-pop-scope-page
  /// [routeName] : pop拦截测试页
  static const String WILL_POP_SCOPE_PAGE = "/will-pop-scope-page";

  /// SliverAppBar测试页
  ///
  /// [name] : /looks-like-sliver-appbar-page
  /// [routeName] : SliverAppBar测试页
  static const String LOOKS_LIKE_SLIVER_APPBAR_PAGE =
      "/looks-like-sliver-appbar-page";

  /// TextField与FAB测试页
  ///
  /// [name] : /text-field-in-floating-action-button-page
  /// [routeName] : TextField与FAB测试页
  static const String TEXT_FIELD_IN_FLOATING_ACTION_BUTTON_PAGE =
      "/text-field-in-floating-action-button-page";

  /// 自定义pageview indicator测试页
  ///
  /// [name] : /custom-page-view-indicator-page
  /// [routeName] : 自定义pageview indicator测试页
  static const String CUSTOM_PAGE_VIEW_INDICATOR_PAGE =
      "/custom-page-view-indicator-page";
}
